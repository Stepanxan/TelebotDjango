from .conf import bot
from telebot import types
from django.db import models


#–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö, —Ç–∞–±–ª–∏—Ü—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —é–∑–µ—Ä–∞
class UserProfile(models.Model):
    telegram_id = models.PositiveIntegerField(unique=True)
    username = models.CharField(max_length=256)
    balance_uah = models.DecimalField(max_digits=10, decimal_places=2)
    balance_usd = models.DecimalField(max_digits=10, decimal_places=2)
    balance_rub = models.DecimalField(max_digits=10, decimal_places=2)

    def __str__(self):
        return f"User: {self.username}, ID: {self.telegram_id}"

    class Meta:
        db_table = "userprofile"

#–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
class Transaction(models.Model):
    user = models.ForeignKey(UserProfile, on_delete=models.CASCADE)
    amount = models.DecimalField(max_digits=10, decimal_places=2)
    transaction_type = models.CharField(max_length=50)
    timestamp = models.DateTimeField(auto_now_add=True)


    def __str__(self):
        return f"Transaction {self.id} for User: {self.user.username}, Amount: {self.amount}, Type: {self.transaction_type}"


#–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —ñ—Å—Ç–æ—Ä—ñ—ó –ø–æ–∫—É–ø–æ–∫
class Purchase(models.Model):
    buyer = models.ForeignKey(UserProfile, on_delete=models.CASCADE, related_name='purchases')
    seller = models.CharField(max_length=256)
    content = models.CharField(max_length=256)
    purchase_date = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.buyer.username} –∫—É–ø–∏–≤(–ª–∞) –≤—ñ–¥ {self.seller}: {self.content} ({self.purchase_date})"

    class Meta:
        db_table = "purchase"

class Vertical():

    @staticmethod
    def choose_vertical(message):
        chat_id = message.chat.id

        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –≤–µ—Ä—Ç–∏–∫–∞–ª–µ–π
        markup = types.ReplyKeyboardMarkup(row_width=1)
        btn_1 = types.KeyboardButton('üé∞ –≥–µ–º–±–ª—ñ–Ω–≥')
        btn_2 = types.KeyboardButton('‚öΩÔ∏è –±–µ—Ç—ñ–Ω–≥')
        btn_3 = types.KeyboardButton('üßò –Ω—É—Ç—Ä–∞')
        btn_4 = types.KeyboardButton('üõí —Ç–æ–≤–∞—Ä–∫–∞')
        btn_5 = types.KeyboardButton('üí∞ –∫—Ä–∏–ø—Ç–∞')
        back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        markup.row(btn_1, btn_2, btn_3, btn_4, btn_5, back)
        bot.send_message(chat_id, '–û–±–µ—Ä—ñ—Ç—å –≤–µ—Ä—Ç–∏–∫–∞–ª—å:', reply_markup=markup)

    @staticmethod
    def handle_vertical(message):
        chat_id = message.chat.id
        vertical = message.text
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn_1 = types.KeyboardButton('üî¢ –í–∏–±—ñ—Ä –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ')
            btn_2 = types.KeyboardButton('üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç')
            markup.row(btn_1, btn_2)
            bot.send_message(message.chat.id, '–ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≤–∏–±–æ—Ä—É –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ', reply_markup=markup)
        else:
            bot.send_message(chat_id, f'–í–∏ –æ–±—Ä–∞–ª–∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å: {vertical}')


# –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç
class Lk ():
    @staticmethod
    def choose_main_menu(message):
        chat_id = message.chat.id
        markup = types.ReplyKeyboardMarkup(row_width=1)
        btn_1 = types.KeyboardButton('üí∞ –ë–∞–ª–∞–Ω—Å')
        btn_2 = types.KeyboardButton('üí≥ –ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è')
        btn_3 = types.KeyboardButton('üóÇ –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π')
        btn_4 = types.KeyboardButton('üõí –ú–æ—ó –ø–æ–∫—É–ø–∫–∏')
        btn_5 = types.KeyboardButton('‚öôÔ∏è FAQ')
        btn_6 = types.KeyboardButton('üî® –°–∞–ø–ø–æ—Ä—Ç')
        back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        markup.row(btn_1, btn_2, btn_3, btn_4, btn_5, btn_6, back)
        bot.send_message(chat_id, 'üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç', reply_markup=markup)


# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –æ—Å–æ–±–∏—Å—Ç–æ–≥–æ –∫–∞–±—ñ–Ω–µ—Ç—É
    @staticmethod
    def handle_main_menu(message):
        chat_id = message.chat.id
        vertical = message.text
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn_1 = types.KeyboardButton('üî¢ –í–∏–±—ñ—Ä –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ')
            btn_2 = types.KeyboardButton('üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç')
            markup.row(btn_1, btn_2)
            bot.send_message(message.chat.id, '–ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', reply_markup=markup)
        elif message.text == 'üí∞ –ë–∞–ª–∞–Ω—Å':
            user = UserProfile.objects.get(telegram_id=message.from_user.id)
            balance_text = f"üí∞ –ë–∞–ª–∞–Ω—Å:\n"
            balance_text += f"üí¥ –ì—Ä–∏–≤–Ω—ñ (UAH): {user.balance_uah}\n"
            balance_text += f"üíµ –î–æ–ª–∞—Ä–∏ (USD): {user.balance_usd}\n"
            balance_text += f"‚ÇΩ –†—É–±–ª—ñ (RUB): {user.balance_rub}\n"
            bot.send_message(chat_id, balance_text)
        else:
            bot.send_message(chat_id, f'–í–∏ –æ–±—Ä–∞–ª–∏: {vertical}')


#–û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è"
    @staticmethod
    def payment_markup(message):
        chat_id = message.chat.id
        markup = types.ReplyKeyboardMarkup(row_width=1)
        btn_1 = types.KeyboardButton('QIWI')
        btn_2 = types.KeyboardButton('Bitcoin')
        btn_3 = types.KeyboardButton('–ü–µ—Ä–µ–≤—ñ–¥ –Ω–∞ –∫–∞—Ä—Ç–∫—É')
        back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        markup.row(btn_1, btn_2, btn_3, back)
        bot.send_message(chat_id, '–í–∏ –æ–±—Ä–∞–ª–∏ —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏', reply_markup=markup)

    # –û–±—Ä–æ–±–∫–∞ —Ç–∏–ø—É –æ–ø–ª–∞—Ç–∏
    @staticmethod
    def handle_payment(message):
        chat_id = message.chat.id
        payment_method = message.text
        if payment_method in ['QIWI', 'Bitcoin', '–ü–µ—Ä–µ–≤—ñ–¥ –Ω–∞ –∫–∞—Ä—Ç–∫—É']:
            bot.send_message(chat_id, f'–í–∏ –æ–±—Ä–∞–ª–∏ —Å–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏: {payment_method}')
            confirm_markup = types.ReplyKeyboardMarkup(row_width=1)
            btn_1 = types.KeyboardButton('‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏')
            back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
            confirm_markup.row(btn_1, back)
            bot.send_message(chat_id, '–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è', reply_markup=confirm_markup)
        elif message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn_1 = types.KeyboardButton('üî¢ –í–∏–±—ñ—Ä –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ')
            btn_2 = types.KeyboardButton('üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç')
            markup.row(btn_1, btn_2)
            bot.send_message(message.chat.id, '–ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', reply_markup=markup)
        else:
            bot.send_message(chat_id, '–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä —Å–ø–æ—Å–æ–±—É –æ–ø–ª–∞—Ç–∏.')

    # –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ " –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π"
    @staticmethod
    def handle_transactions_history(message):
        chat_id = message.chat.id
        user = UserProfile.objects.get(telegram_id=message.from_user.id)
        transactions = Transaction.objects.filter(user=user).order_by('-timestamp')
        if transactions:
            transactions_text = "–Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:\n"
            for transaction in transactions:
                transactions_text += f"\n üìã –¢–∏–ø: {transaction.transaction_type}\n üí∞ –°—É–º–∞: {transaction.amount}\n ‚è± –ß–∞—Å: {transaction.timestamp}\n"
            bot.send_message(chat_id, transactions_text)
        else:
            bot.send_message(chat_id, "–Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –ø–æ—Ä–æ–∂–Ω—è.")


    @staticmethod
    # –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "üõí –ú–æ—ó –ø–æ–∫—É–ø–∫–∏"
    def handle_my_purchases(message):
        chat_id = message.chat.id
        user = UserProfile.objects.get(telegram_id=message.from_user.id)
        purchases = Purchase.objects.filter(buyer=user).order_by('-purchase_date')
        if purchases:
            purchases_info = "üõí –í–∞—à—ñ –ø–æ–∫—É–ø–∫–∏:\n"
            for purchase in purchases:
                seller_nickname = purchase.seller
                content = purchase.content
                purchase_date = purchase.purchase_date.strftime("%Y-%m-%d %H:%M:%S")
                purchases_info += f"\n üë§ –ü—Ä–æ–¥–∞–≤–µ—Ü—å: {seller_nickname}\nüì¶ –ö–æ–Ω—Ç–µ–Ω—Ç: {content}\nüï∞ –î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏: {purchase_date}\n"
            bot.send_message(chat_id, purchases_info)
        else:
            bot.send_message(chat_id, "–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –ø–æ–∫—É–ø–æ–∫.")

    # –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "FAQ"
    @staticmethod
    def handle_faq_button(message):
        chat_id = message.chat.id
        faq_message = "–í—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –≤—Å—ñ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–¥–∞–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: "
        bot.send_message(chat_id, faq_message)


# –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ " –°–∞–ø–ø–æ—Ä—Ç"
    @staticmethod
    def handle_support_button(message):
        chat_id = message.chat.id
        support_channel_id = "6170783158"
        support_link = f"https://t.me/c/{support_channel_id[4:]}"  # –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–∞–Ω–∞–ª —Å–∞–ø–ø–æ—Ä—Ç—É
        bot.send_message(chat_id, f"–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞, –ø—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—å –¥–æ –Ω–∞—à–æ–≥–æ –∫–∞–Ω–∞–ª—É —Å–∞–ø–ø–æ—Ä—Ç—É VNV Solutions Bot: {support_link}")



class Gembling():

#–ö–Ω–æ–ø–∫–∞ –≤–∏–±–æ—Ä—É –≥–µ–º–±—ñ–Ω–≥–∞
    @staticmethod
    def choose_gempling(message):
        chat_id = message.chat.id

        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –≥–µ–º–±—ñ–Ω–≥–∞
        markup = types.ReplyKeyboardMarkup(row_width=1)
        btn_1 = types.KeyboardButton('üî¥ –ª–µ–Ω–¥')
        btn_2 = types.KeyboardButton('üü† –ø—Ä–µ–ª–µ–Ω–¥')
        btn_3 = types.KeyboardButton('üü¢ —Ç–≥ –±–æ—Ç')
        btn_4 = types.KeyboardButton('üîµ –∫–∞—Å—Ç–æ–º')
        back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        markup.row(btn_1, btn_2, btn_3, btn_4, back)
        bot.send_message(chat_id, '–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –≥–µ–º–±–ª—ñ–Ω–≥–∞', reply_markup=markup)


# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –≥–µ–º–±–ª—ñ–Ω–≥–∞
    @staticmethod
    def handle_gembling(message):
        chat_id = message.chat.id
        vertical = message.text
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn_1 = types.KeyboardButton('üî¢ –í–∏–±—ñ—Ä –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ')
            btn_2 = types.KeyboardButton('üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç')
            markup.row(btn_1, btn_2)
            bot.send_message(message.chat.id, '–ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', reply_markup=markup)
        else:
            bot.send_message(chat_id, f'–í–∏ –æ–±—Ä–∞–ª–∏ –≥–µ–º–±–ª—ñ–Ω–≥: {vertical}')


class Project():
    # –ö–Ω–æ–ø–∫–∞ –≤–∏–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫–∏ –ø—Ä–∏–∫–ª–∞–¥—É —Ä–æ–±–æ—Ç–∏ —ñ –æ–ø–∏—Å—É –ø—Ä–æ–µ–∫—Ç—É
    @staticmethod
    def choose_project(message):
        chat_id = message.chat.id


        markup = types.ReplyKeyboardMarkup(row_width=1)
        btn_1 = types.KeyboardButton('üíº –ü—Ä–∏–∫–ª–∞–¥ —Ä–æ–±—ñ—Ç —ñ –æ–ø–∏—Å –ø—Ä–æ–µ–∫—Ç—É')
        back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        markup.row(btn_1, back)
        bot.send_message(chat_id, f'–í–∏ –æ–±—Ä–∞–ª–∏: {message.text}', reply_markup=markup)

    # –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫–∏ –ø—Ä–∏–∫–ª–∞–¥—É —Ä–æ–±–æ—Ç–∏ —ñ –æ–ø–∏—Å—É –ø—Ä–æ–µ–∫—Ç—É
    @staticmethod
    def handle_project(message):
        chat_id = message.chat.id
        vertical = message.text
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn_1 = types.KeyboardButton('üî¢ –í–∏–±—ñ—Ä –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ')
            btn_2 = types.KeyboardButton('üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç')
            markup.row(btn_1, btn_2)
            bot.send_message(message.chat.id, '–ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≤–∏–±–æ—Ä—É –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ', reply_markup=markup)
        else:
            bot.send_message(chat_id, f'–í–∏ –æ–±—Ä–∞–ª–∏ –ø—Ä–∏–∫–ª–∞–¥ —Ä–æ–±–æ—Ç–∏ —ñ –æ–ø–∏—Å—É –ø—Ä–æ–µ–∫—Ç—É: {vertical}')


class Upplybutton():

    # –ö–Ω–æ–ø–∫–∞ –≤–∏–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫–∏ –∫–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç–∏
    @staticmethod
    def choose_button(message):
        chat_id = message.chat.id
        markup = types.ReplyKeyboardMarkup(row_width=1)
        btn_1 = types.KeyboardButton('üí≥ –∫–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç–∏')
        back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        markup.row(btn_1,back)
        bot.send_message(chat_id, '–í–∏–±–µ—Ä—ñ—Ç—å –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç–∏', reply_markup=markup)

    # –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫–∏ –∫–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç–∏
    @staticmethod
    def handle_button(message):
        chat_id = message.chat.id
        vertical = message.text
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn_1 = types.KeyboardButton('üî¢ –í–∏–±—ñ—Ä –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ')
            btn_2 = types.KeyboardButton('üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç')
            markup.row(btn_1, btn_2)
            bot.send_message(message.chat.id, '–ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≤–∏–±–æ—Ä—É –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ', reply_markup=markup)
        else:
            bot.send_message(chat_id, f'–í–∏ –æ–±—Ä–∞–ª–∏: {vertical}')


class WrittenOffBalance():

    # –ö–Ω–æ–ø–∫–∞ –≤–∏–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫–∏ —Å–ø–∏—Å–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
    @staticmethod
    def choose_written_off_balance(message):
        chat_id = message.chat.id
        markup = types.ReplyKeyboardMarkup(row_width=1)
        btn_1 = types.KeyboardButton('üí∏ –°–ø–∏—Å–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É')
        back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        markup.row(btn_1, back)
        bot.send_message(chat_id, '–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å —Å–ø–∏—Å–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É', reply_markup=markup)

    # –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫–∏ —Å–ø–∏—Å–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
    @staticmethod
    def handle_written_off_balance(message):
        chat_id = message.chat.id
        vertical = message.text
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn_1 = types.KeyboardButton('üî¢ –í–∏–±—ñ—Ä –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ')
            btn_2 = types.KeyboardButton('üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç')
            markup.row(btn_1, btn_2)
            bot.send_message(message.chat.id, '–ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≤–∏–±–æ—Ä—É –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ', reply_markup=markup)
        else:
            bot.send_message(chat_id, f'–í–∏ –æ–±—Ä–∞–ª–∏: {vertical}')


class Product():

    # –ö–Ω–æ–ø–∫–∞ –≤–∏–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫–∏ –ø—Ä–æ–¥—É–∫—Ç —ñ –≤—Å—ñ –π–æ–≥–æ –∫–æ–º–ø–ª–µ—Ç—É—é—á—ñ —Ä–∞–∑–æ–º –∑ –º–∞–Ω—É–∞–ª–æ–º
    @staticmethod
    def choose_product(message):
        chat_id = message.chat.id
        markup = types.ReplyKeyboardMarkup(row_width=1)
        btn_1 = types.KeyboardButton('–ø—Ä–æ–¥—É–∫—Ç —ñ –≤—Å—ñ –π–æ–≥–æ –∫–æ–º–ø–ª–µ—Ç—É—é—á—ñ —Ä–∞–∑–æ–º –∑ –º–∞–Ω—É–∞–ª–æ–º')
        back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        markup.row(btn_1, back)
        bot.send_message(chat_id, '–ø—Ä–æ–¥—É–∫—Ç —ñ –≤—Å—ñ –π–æ–≥–æ –∫–æ–º–ø–ª–µ—Ç—É—é—á—ñ —Ä–∞–∑–æ–º –∑ –º–∞–Ω—É–∞–ª–æ–º', reply_markup=markup)

    # –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç —ñ –≤—Å—ñ –π–æ–≥–æ –∫–æ–º–ø–ª–µ—Ç—É—é—á—ñ —Ä–∞–∑–æ–º –∑ –º–∞–Ω—É–∞–ª–æ–º
    @staticmethod
    def handle_product(message):
        chat_id = message.chat.id
        vertical = message.text
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(row_width=1)
            btn_1 = types.KeyboardButton('üî¢ –í–∏–±—ñ—Ä –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ')
            btn_2 = types.KeyboardButton('üë§ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç')
            markup.row(btn_1, btn_2)
            bot.send_message(message.chat.id, '–ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≤–∏–±–æ—Ä—É –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ', reply_markup=markup)
        else:
            bot.send_message(chat_id, f'–í–∏ –æ–±—Ä–∞–ª–∏: {vertical}')

